buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "hardcorenomad"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

repositories {
	maven {
		name = "chickenbones"
		url = "http://chickenbones.net/maven"
	}
}

apply plugin: 'scala'
apply plugin: 'forge'
apply plugin: 'java'

ext.configFile = file "build.properties"

configFile.withReader {
    // read config.  it shall from now on be referenced as simply config or as project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

sourceCompatibility = JavaVersion.VERSION_1_6
targetCompatibility = JavaVersion.VERSION_1_6

version = "${config.mod_version}"
group= "net.firesquared.hardcorenomad" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "HardcoreNomad"

minecraft {
    version = "${config.minecraft_version}-${config.forge_version}"
    assetDir = "eclipse/assets"
}

dependencies {
	compile "codechicken:CodeChickenLib:${config.minecraft_version}-${config.CCLIB_version}:dev"
    compile "codechicken:CodeChickenCore:${config.minecraft_version}-${config.ccc_version}:dev"
    compile "codechicken:NotEnoughItems:${config.minecraft_version}-${config.NEI_version}:dev"
}

version = "${config.minecraft_version}-"+version+"-b"+(System.getenv("BUILD_ID") ?:0);

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'
        include '**/*.lang'
        include '**/*.properties'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
        exclude '**/*.lang'
        exclude '**/*.properties'
    }
}

//Add universal identifier to jar name
jar {
    classifier = 'universal'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

task sourceJar(type: Zip) {
    from sourceSets.main.allSource
    classifier = 'source'
}

artifacts {
    archives deobfJar
}

build.dependsOn sourceJar